{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";;;;;;AAOA,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAGrC,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;;;;;;;;AAQjB,eAAS,QAAQ;;;;;;;;AAUjB,cAAU,EAAA,sBAAG;AACT,YAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAChC;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "/*\n    Human isn't actually an obstacle, but it behaves like one\n\n    Just alter the behavior with Visitor pattern -- gooseVisit\n*/\n\n\nconst Obstacle = require(\"Obstacle\");\n\n\nvar Human = cc.Class({\n    /*\n        Obstacle properties:\n            speedX\n            initX\n            resetX\n            initY\n    */\n    extends: Obstacle,\n\n    \n    /*Implementing abstract method in interface*/\n\n\n    /*\n        ---Visitor pattern---\n        called by goose when collide\n    */\n    gooseVisit() {\n        this.manager.gainScore(this);\n    },\n});"
  ]
}